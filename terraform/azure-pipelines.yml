resources:
- repo: self
  fetchDepth: 1

trigger:
- master

variables:
  artifactName: 'GameStore'

stages:
  - stage: Build
    jobs:
    - job: Build
      displayName: Build application
      condition: succeeded()
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '--configuration Release'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/terraform'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/terraform'
          CleanTargetFolder: true
      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'GameStore'
          targetPath: $(Build.ArtifactStagingDirectory)
  
  - stage: Deploy
    jobs:
    - deployment: Staging
      variables:
        stage: 'staging'
        bucket: 'terraform_state_b'
      displayName: Deploy 
      pool:
        vmImage: ubuntu-latest
      environment: 'gamestore-staging'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  mkdir $(Pipeline.Workspace)/GameStore/terraform/ssh
                  ssh-keygen -t rsa -N "" -f $(Pipeline.Workspace)/GameStore/terraform/ssh/id_rsa -C "DESKTOP-R09LI80"
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'init'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                backendServiceGCP: 'FinalDemo Terraform'
                backendGCPBucketName: '$(bucket)'
                backendGCPPrefix: 'terraform/$(stage)'
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'plan'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                environmentServiceNameGCP: 'FinalDemo Terraform'
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'apply'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                environmentServiceNameGCP: 'FinalDemo Terraform'
  
  - stage: Release
    jobs:
    - deployment: Production
      variables:
        stage: 'production'
        bucket: 'terraform_state_b'
      displayName: Deploy 
      pool:
        vmImage: ubuntu-latest
      environment: 'gamestore-production'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  mkdir $(Pipeline.Workspace)/GameStore/terraform/ssh
                  ssh-keygen -t rsa -N "" -f $(Pipeline.Workspace)/GameStore/terraform/ssh/id_rsa -C "DESKTOP-R09LI80"
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'init'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                backendServiceGCP: 'FinalDemo Terraform'
                backendGCPBucketName: '$(bucket)'
                backendGCPPrefix: 'terraform/$(stage)'
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'plan'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                environmentServiceNameGCP: 'FinalDemo Terraform'
            - task: TerraformTaskV1@0
              inputs:
                provider: 'gcp'
                command: 'apply'
                workingDirectory: '$(Pipeline.Workspace)/GameStore/terraform/env_$(stage)'
                environmentServiceNameGCP: 'FinalDemo Terraform'
                